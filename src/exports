#!/bin/sh
#

# Source private, user-local exports
[ -f "${HOME}/.privexports" ] && . "${HOME}/.privexports";

if command -v emacs 2>&1 1>/dev/null; then
	export EDITOR='emacs';
else
	export EDITOR='nano';
fi

if command -v vscodium 2>&1 1>/dev/null; then
	export VISUAL='vscodium';
elif command -v code 2>&1 1>/dev/null; then
	export VISUAL='code';
elif command -v geany 2>&1 1>/dev/null; then
	export VISUAL='geany';
elif command -v gedit 2>&1 1>/dev/null; then
	export VISUAL='gedit';
else
	export VISUAL="${EDITOR}";
fi

export XZ_DEFAULTS='-6eT 0'

# Enable persistent REPL history for `node`.
export NODE_REPL_HISTORY="${HOME}/.node_history";
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768';
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy';

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONIOENCODING='UTF-8';

# Increase Bash history size. Allow 32³ entries; the default is 500.
export HISTSIZE='32768';
export HISTFILESIZE="${HISTSIZE}";
# Omit duplicates and commands that begin with a space from history.
export HISTCONTROL='ignoreboth';

# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8';
export LC_ALL='en_US.UTF-8';

# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}";

# Don’t clear the screen after quitting a manual page.
export MANPAGER='less -X';

# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
export GPG_TTY="$(tty)";

# devkitPro
if [ -d /opt/devkitpro ]; then
	export DEVKITPRO=/opt/devkitpro;
	export DKP="$DEVKITPRO";
	[ -d "${DEVKITPRO}/devkitARM" ] && \
		export DEVKITARM="${DEVKITPRO}/devkitARM" && \
		export DKA="$DEVKITARM" && \
		PATH="${DEVKITARM}/bin:${PATH}";
	[ -d "${DEVKITPRO}/devkitPPC" ] && \
		export DEVKITPPC="${DEVKITPRO}/devkitPPC" && \
		export DKPPC="$DEVKITPPC" && \
		PATH="${DEVKITPPC}/bin:${PATH}";
	[ -d "${DEVKITPRO}/devkitA64" ] && \
		export DEVKITA64="${DEVKITPRO}/devkitA64" && \
		export DKA64="$DEVKITA64" && \
		PATH="${DEVKITA64}/bin:${PATH}"; \
	[ -d "${DEVKITPRO}/tools" ] && \
		PATH="${DEVKITPRO}/tools/bin:${PATH}";
fi

# $HOME/bin and $HOME/.local/bin
test -d "${HOME}/bin" && PATH="${HOME}/bin:${PATH}";
test -d "${HOME}/.local/bin" && PATH="${HOME}/.local/bin:${PATH}";

# Ruby gems
if test -d "${HOME}/.gem"; then
	PATH="${HOME}/gem/ruby/$(ls -1 --color=no ${HOME}/.gem/ruby \
	| head -n 1)/bin:${PATH}";
fi

# Homebrew
if command -v brew 2>&1 1>/dev/null; then
	PATH="$(brew --prefix)/bin:${PATH}";
	# Android SDK will need this
	if test -d "$(brew --prefix)/opt/openjdk/bin"; then
		PATH="$(brew --prefix)/opt/openjdk/bin:${PATH}";
		JAVA_HOME="$(brew --prefix)/opt/openjdk";
		export JAVA_HOME;
	fi
fi

# Android SDK
# base directory
if test -d "${HOME}/.android-sdk"; then
	ANDROID_HOME="${HOME}/.android-sdk";
	export ANDROID_HOME;
elif test -d "${HOME}/Android/Sdk"; then
	ANDROID_HOME="${HOME}/Android/Sdk";
	export ANDROID_HOME;
fi
# path additions
if test "${ANDROID_HOME}" != ''; then
	if test -d "${ANDROID_HOME}/emulator"; then
		PATH="${ANDROID_HOME}/emulator:${PATH}";
	fi
	if test -d "${ANDROID_HOME}/platform-tools"; then
		PATH="${ANDROID_HOME}/platform-tools:${PATH}";
	fi
	if test -d "${ANDROID_HOME}/cmdline-tools/latest/bin"; then
		PATH="${ANDROID_HOME}/cmdline-tools/latest/bin:${PATH}";
	fi
fi

# Node version manager
if test -d "${HOME}/.nvm"; then
	NVM_DIR="${HOME}/.nvm";
	export NVM_DIR;
	test -s "${NVM_DIR}/nvm.sh" && . "${NVM_DIR}/nvm.sh";
	test -s "${NVM_DIR}/bash_completion" && \
		. "${NVM_DIR}/bash_completion";
fi

# Golang
if command -v go 1>/dev/null; then
	GOPATH="${HOME}/.go";
	export GOPATH;
	test -d "${GOPATH}/bin" && PATH="${GOPATH}/bin:${PATH}";
fi

HOMEBREW_NO_ANALYTICS=1;

export HOMEBREW_NO_ANALYTICS;
export PATH;
