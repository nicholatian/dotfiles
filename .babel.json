{
  "{\"filename\":\"/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack/webpack.dll.babel.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack/webpack.dll.babel.js",
      "filenameRelative": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack/webpack.dll.babel.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "webpack.dll.babel.js",
      "sourceFileName": "webpack.dll.babel.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "webpack.dll.babel"
    },
    "ignored": false,
    "code": "/**\n * WEBPACK DLL GENERATOR\n *\n * This profile is used to cache webpack's module\n * contexts for external library and framework type\n * dependencies which will usually not change often enough\n * to warrant building them from scratch every time we use\n * the webpack process.\n */\n\nvar _require = require('path'),\n    join = _require.join;\n\nvar defaults = require('lodash/defaultsDeep');\nvar webpack = require('webpack');\nvar pkg = require(join(process.cwd(), 'package.json'));\nvar dllPlugin = require('../config').dllPlugin;\n\nif (!pkg.dllPlugin) {\n  process.exit(0);\n}\n\nvar dllConfig = defaults(pkg.dllPlugin, dllPlugin.defaults);\nvar outputPath = join(process.cwd(), dllConfig.path);\n\nmodule.exports = require('./webpack.base.babel')({\n  context: process.cwd(),\n  entry: dllConfig.dlls ? dllConfig.dlls : dllPlugin.entry(pkg),\n  devtool: 'eval',\n  output: {\n    filename: '[name].dll.js',\n    path: outputPath,\n    library: '[name]'\n  },\n  plugins: [new webpack.DllPlugin({ name: '[name]', path: join(outputPath, '[name].json') })],\n  performance: {\n    hints: false\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2suZGxsLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJqb2luIiwiZGVmYXVsdHMiLCJ3ZWJwYWNrIiwicGtnIiwicHJvY2VzcyIsImN3ZCIsImRsbFBsdWdpbiIsImV4aXQiLCJkbGxDb25maWciLCJvdXRwdXRQYXRoIiwicGF0aCIsIm1vZHVsZSIsImV4cG9ydHMiLCJjb250ZXh0IiwiZW50cnkiLCJkbGxzIiwiZGV2dG9vbCIsIm91dHB1dCIsImZpbGVuYW1lIiwibGlicmFyeSIsInBsdWdpbnMiLCJEbGxQbHVnaW4iLCJuYW1lIiwicGVyZm9ybWFuY2UiLCJoaW50cyJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7ZUFVaUJBLFFBQVEsTUFBUixDO0lBQVRDLEksWUFBQUEsSTs7QUFDUixJQUFNQyxXQUFXRixRQUFRLHFCQUFSLENBQWpCO0FBQ0EsSUFBTUcsVUFBVUgsUUFBUSxTQUFSLENBQWhCO0FBQ0EsSUFBTUksTUFBTUosUUFBUUMsS0FBS0ksUUFBUUMsR0FBUixFQUFMLEVBQW9CLGNBQXBCLENBQVIsQ0FBWjtBQUNBLElBQU1DLFlBQVlQLFFBQVEsV0FBUixFQUFxQk8sU0FBdkM7O0FBRUEsSUFBSSxDQUFDSCxJQUFJRyxTQUFULEVBQW9CO0FBQUVGLFVBQVFHLElBQVIsQ0FBYSxDQUFiO0FBQWtCOztBQUV4QyxJQUFNQyxZQUFZUCxTQUFTRSxJQUFJRyxTQUFiLEVBQXdCQSxVQUFVTCxRQUFsQyxDQUFsQjtBQUNBLElBQU1RLGFBQWFULEtBQUtJLFFBQVFDLEdBQVIsRUFBTCxFQUFvQkcsVUFBVUUsSUFBOUIsQ0FBbkI7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUJiLFFBQVEsc0JBQVIsRUFBZ0M7QUFDL0NjLFdBQVNULFFBQVFDLEdBQVIsRUFEc0M7QUFFL0NTLFNBQU9OLFVBQVVPLElBQVYsR0FBaUJQLFVBQVVPLElBQTNCLEdBQWtDVCxVQUFVUSxLQUFWLENBQWdCWCxHQUFoQixDQUZNO0FBRy9DYSxXQUFTLE1BSHNDO0FBSS9DQyxVQUFRO0FBQ05DLGNBQVUsZUFESjtBQUVOUixVQUFNRCxVQUZBO0FBR05VLGFBQVM7QUFISCxHQUp1QztBQVMvQ0MsV0FBUyxDQUNQLElBQUlsQixRQUFRbUIsU0FBWixDQUFzQixFQUFFQyxNQUFNLFFBQVIsRUFBa0JaLE1BQU1WLEtBQUtTLFVBQUwsRUFBaUIsYUFBakIsQ0FBeEIsRUFBdEIsQ0FETyxDQVRzQztBQVkvQ2MsZUFBYTtBQUNYQyxXQUFPO0FBREk7QUFaa0MsQ0FBaEMsQ0FBakIiLCJmaWxlIjoid2VicGFjay5kbGwuYmFiZWwuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvYWxleC9zcmMvZ2l0aHViLmNvbS9uaWNob2xhdGlhbi9qaWdnbHltYXAvaW50ZXJuYWxzL3dlYnBhY2siLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFdFQlBBQ0sgRExMIEdFTkVSQVRPUlxuICpcbiAqIFRoaXMgcHJvZmlsZSBpcyB1c2VkIHRvIGNhY2hlIHdlYnBhY2sncyBtb2R1bGVcbiAqIGNvbnRleHRzIGZvciBleHRlcm5hbCBsaWJyYXJ5IGFuZCBmcmFtZXdvcmsgdHlwZVxuICogZGVwZW5kZW5jaWVzIHdoaWNoIHdpbGwgdXN1YWxseSBub3QgY2hhbmdlIG9mdGVuIGVub3VnaFxuICogdG8gd2FycmFudCBidWlsZGluZyB0aGVtIGZyb20gc2NyYXRjaCBldmVyeSB0aW1lIHdlIHVzZVxuICogdGhlIHdlYnBhY2sgcHJvY2Vzcy5cbiAqL1xuXG5jb25zdCB7IGpvaW4gfSA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGRlZmF1bHRzID0gcmVxdWlyZSgnbG9kYXNoL2RlZmF1bHRzRGVlcCcpO1xuY29uc3Qgd2VicGFjayA9IHJlcXVpcmUoJ3dlYnBhY2snKTtcbmNvbnN0IHBrZyA9IHJlcXVpcmUoam9pbihwcm9jZXNzLmN3ZCgpLCAncGFja2FnZS5qc29uJykpO1xuY29uc3QgZGxsUGx1Z2luID0gcmVxdWlyZSgnLi4vY29uZmlnJykuZGxsUGx1Z2luO1xuXG5pZiAoIXBrZy5kbGxQbHVnaW4pIHsgcHJvY2Vzcy5leGl0KDApOyB9XG5cbmNvbnN0IGRsbENvbmZpZyA9IGRlZmF1bHRzKHBrZy5kbGxQbHVnaW4sIGRsbFBsdWdpbi5kZWZhdWx0cyk7XG5jb25zdCBvdXRwdXRQYXRoID0gam9pbihwcm9jZXNzLmN3ZCgpLCBkbGxDb25maWcucGF0aCk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi93ZWJwYWNrLmJhc2UuYmFiZWwnKSh7XG4gIGNvbnRleHQ6IHByb2Nlc3MuY3dkKCksXG4gIGVudHJ5OiBkbGxDb25maWcuZGxscyA/IGRsbENvbmZpZy5kbGxzIDogZGxsUGx1Z2luLmVudHJ5KHBrZyksXG4gIGRldnRvb2w6ICdldmFsJyxcbiAgb3V0cHV0OiB7XG4gICAgZmlsZW5hbWU6ICdbbmFtZV0uZGxsLmpzJyxcbiAgICBwYXRoOiBvdXRwdXRQYXRoLFxuICAgIGxpYnJhcnk6ICdbbmFtZV0nLFxuICB9LFxuICBwbHVnaW5zOiBbXG4gICAgbmV3IHdlYnBhY2suRGxsUGx1Z2luKHsgbmFtZTogJ1tuYW1lXScsIHBhdGg6IGpvaW4ob3V0cHV0UGF0aCwgJ1tuYW1lXS5qc29uJykgfSksIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gIF0sXG4gIHBlcmZvcm1hbmNlOiB7XG4gICAgaGludHM6IGZhbHNlLFxuICB9LFxufSk7XG4iXX0=",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "webpack.dll.babel.js"
      ],
      "names": [
        "require",
        "join",
        "defaults",
        "webpack",
        "pkg",
        "process",
        "cwd",
        "dllPlugin",
        "exit",
        "dllConfig",
        "outputPath",
        "path",
        "module",
        "exports",
        "context",
        "entry",
        "dlls",
        "devtool",
        "output",
        "filename",
        "library",
        "plugins",
        "DllPlugin",
        "name",
        "performance",
        "hints"
      ],
      "mappings": "AAAA;;;;;;;;;;eAUiBA,QAAQ,MAAR,C;IAATC,I,YAAAA,I;;AACR,IAAMC,WAAWF,QAAQ,qBAAR,CAAjB;AACA,IAAMG,UAAUH,QAAQ,SAAR,CAAhB;AACA,IAAMI,MAAMJ,QAAQC,KAAKI,QAAQC,GAAR,EAAL,EAAoB,cAApB,CAAR,CAAZ;AACA,IAAMC,YAAYP,QAAQ,WAAR,EAAqBO,SAAvC;;AAEA,IAAI,CAACH,IAAIG,SAAT,EAAoB;AAAEF,UAAQG,IAAR,CAAa,CAAb;AAAkB;;AAExC,IAAMC,YAAYP,SAASE,IAAIG,SAAb,EAAwBA,UAAUL,QAAlC,CAAlB;AACA,IAAMQ,aAAaT,KAAKI,QAAQC,GAAR,EAAL,EAAoBG,UAAUE,IAA9B,CAAnB;;AAEAC,OAAOC,OAAP,GAAiBb,QAAQ,sBAAR,EAAgC;AAC/Cc,WAAST,QAAQC,GAAR,EADsC;AAE/CS,SAAON,UAAUO,IAAV,GAAiBP,UAAUO,IAA3B,GAAkCT,UAAUQ,KAAV,CAAgBX,GAAhB,CAFM;AAG/Ca,WAAS,MAHsC;AAI/CC,UAAQ;AACNC,cAAU,eADJ;AAENR,UAAMD,UAFA;AAGNU,aAAS;AAHH,GAJuC;AAS/CC,WAAS,CACP,IAAIlB,QAAQmB,SAAZ,CAAsB,EAAEC,MAAM,QAAR,EAAkBZ,MAAMV,KAAKS,UAAL,EAAiB,aAAjB,CAAxB,EAAtB,CADO,CATsC;AAY/Cc,eAAa;AACXC,WAAO;AADI;AAZkC,CAAhC,CAAjB",
      "file": "webpack.dll.babel.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack",
      "sourcesContent": [
        "/**\n * WEBPACK DLL GENERATOR\n *\n * This profile is used to cache webpack's module\n * contexts for external library and framework type\n * dependencies which will usually not change often enough\n * to warrant building them from scratch every time we use\n * the webpack process.\n */\n\nconst { join } = require('path');\nconst defaults = require('lodash/defaultsDeep');\nconst webpack = require('webpack');\nconst pkg = require(join(process.cwd(), 'package.json'));\nconst dllPlugin = require('../config').dllPlugin;\n\nif (!pkg.dllPlugin) { process.exit(0); }\n\nconst dllConfig = defaults(pkg.dllPlugin, dllPlugin.defaults);\nconst outputPath = join(process.cwd(), dllConfig.path);\n\nmodule.exports = require('./webpack.base.babel')({\n  context: process.cwd(),\n  entry: dllConfig.dlls ? dllConfig.dlls : dllPlugin.entry(pkg),\n  devtool: 'eval',\n  output: {\n    filename: '[name].dll.js',\n    path: outputPath,\n    library: '[name]',\n  },\n  plugins: [\n    new webpack.DllPlugin({ name: '[name]', path: join(outputPath, '[name].json') }), // eslint-disable-line no-new\n  ],\n  performance: {\n    hints: false,\n  },\n});\n"
      ]
    },
    "mtime": 1514460849213
  },
  "{\"filename\":\"/home/alex/src/github.com/nicholatian/jigglymap/internals/config.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/alex/src/github.com/nicholatian/jigglymap/internals\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/alex/src/github.com/nicholatian/jigglymap/internals/config.js",
      "filenameRelative": "/home/alex/src/github.com/nicholatian/jigglymap/internals/config.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "config.js",
      "sourceFileName": "config.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "config"
    },
    "ignored": false,
    "code": "var resolve = require('path').resolve;\nvar pullAll = require('lodash/pullAll');\nvar uniq = require('lodash/uniq');\n\nvar ReactBoilerplate = {\n  // This refers to the react-boilerplate version this project is based on.\n  version: '3.4.0',\n\n  /**\n   * The DLL Plugin provides a dramatic speed increase to webpack build and hot module reloading\n   * by caching the module metadata for all of our npm dependencies. We enable it by default\n   * in development.\n   *\n   *\n   * To disable the DLL Plugin, set this value to false.\n   */\n  dllPlugin: {\n    defaults: {\n      /**\n       * we need to exclude dependencies which are not intended for the browser\n       * by listing them here.\n       */\n      exclude: ['chalk', 'compression', 'cross-env', 'express', 'ip', 'minimist', 'sanitize.css'],\n\n      /**\n       * Specify any additional dependencies here. We include core-js and lodash\n       * since a lot of our dependencies depend on them and they get picked up by webpack.\n       */\n      include: ['core-js', 'eventsource-polyfill', 'babel-polyfill', 'lodash'],\n\n      // The path where the DLL manifest and bundle will get built\n      path: resolve('../node_modules/react-boilerplate-dlls')\n    },\n\n    entry: function entry(pkg) {\n      var dependencyNames = Object.keys(pkg.dependencies);\n      var exclude = pkg.dllPlugin.exclude || ReactBoilerplate.dllPlugin.defaults.exclude;\n      var include = pkg.dllPlugin.include || ReactBoilerplate.dllPlugin.defaults.include;\n      var includeDependencies = uniq(dependencyNames.concat(include));\n\n      return {\n        reactBoilerplateDeps: pullAll(includeDependencies, exclude)\n      };\n    }\n  }\n};\n\nmodule.exports = ReactBoilerplate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyJdLCJuYW1lcyI6WyJyZXNvbHZlIiwicmVxdWlyZSIsInB1bGxBbGwiLCJ1bmlxIiwiUmVhY3RCb2lsZXJwbGF0ZSIsInZlcnNpb24iLCJkbGxQbHVnaW4iLCJkZWZhdWx0cyIsImV4Y2x1ZGUiLCJpbmNsdWRlIiwicGF0aCIsImVudHJ5IiwicGtnIiwiZGVwZW5kZW5jeU5hbWVzIiwiT2JqZWN0Iiwia2V5cyIsImRlcGVuZGVuY2llcyIsImluY2x1ZGVEZXBlbmRlbmNpZXMiLCJjb25jYXQiLCJyZWFjdEJvaWxlcnBsYXRlRGVwcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLElBQU1BLFVBQVVDLFFBQVEsTUFBUixFQUFnQkQsT0FBaEM7QUFDQSxJQUFNRSxVQUFVRCxRQUFRLGdCQUFSLENBQWhCO0FBQ0EsSUFBTUUsT0FBT0YsUUFBUSxhQUFSLENBQWI7O0FBRUEsSUFBTUcsbUJBQW1CO0FBQ3ZCO0FBQ0FDLFdBQVMsT0FGYzs7QUFJdkI7Ozs7Ozs7O0FBUUFDLGFBQVc7QUFDVEMsY0FBVTtBQUNSOzs7O0FBSUFDLGVBQVMsQ0FDUCxPQURPLEVBRVAsYUFGTyxFQUdQLFdBSE8sRUFJUCxTQUpPLEVBS1AsSUFMTyxFQU1QLFVBTk8sRUFPUCxjQVBPLENBTEQ7O0FBZVI7Ozs7QUFJQUMsZUFBUyxDQUFDLFNBQUQsRUFBWSxzQkFBWixFQUFvQyxnQkFBcEMsRUFBc0QsUUFBdEQsQ0FuQkQ7O0FBcUJSO0FBQ0FDLFlBQU1WLFFBQVEsd0NBQVI7QUF0QkUsS0FERDs7QUEwQlRXLFNBMUJTLGlCQTBCSEMsR0ExQkcsRUEwQkU7QUFDVCxVQUFNQyxrQkFBa0JDLE9BQU9DLElBQVAsQ0FBWUgsSUFBSUksWUFBaEIsQ0FBeEI7QUFDQSxVQUFNUixVQUFVSSxJQUFJTixTQUFKLENBQWNFLE9BQWQsSUFBeUJKLGlCQUFpQkUsU0FBakIsQ0FBMkJDLFFBQTNCLENBQW9DQyxPQUE3RTtBQUNBLFVBQU1DLFVBQVVHLElBQUlOLFNBQUosQ0FBY0csT0FBZCxJQUF5QkwsaUJBQWlCRSxTQUFqQixDQUEyQkMsUUFBM0IsQ0FBb0NFLE9BQTdFO0FBQ0EsVUFBTVEsc0JBQXNCZCxLQUFLVSxnQkFBZ0JLLE1BQWhCLENBQXVCVCxPQUF2QixDQUFMLENBQTVCOztBQUVBLGFBQU87QUFDTFUsOEJBQXNCakIsUUFBUWUsbUJBQVIsRUFBNkJULE9BQTdCO0FBRGpCLE9BQVA7QUFHRDtBQW5DUTtBQVpZLENBQXpCOztBQW1EQVksT0FBT0MsT0FBUCxHQUFpQmpCLGdCQUFqQiIsImZpbGUiOiJjb25maWcuanMiLCJzb3VyY2VSb290IjoiL2hvbWUvYWxleC9zcmMvZ2l0aHViLmNvbS9uaWNob2xhdGlhbi9qaWdnbHltYXAvaW50ZXJuYWxzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcmVzb2x2ZSA9IHJlcXVpcmUoJ3BhdGgnKS5yZXNvbHZlO1xuY29uc3QgcHVsbEFsbCA9IHJlcXVpcmUoJ2xvZGFzaC9wdWxsQWxsJyk7XG5jb25zdCB1bmlxID0gcmVxdWlyZSgnbG9kYXNoL3VuaXEnKTtcblxuY29uc3QgUmVhY3RCb2lsZXJwbGF0ZSA9IHtcbiAgLy8gVGhpcyByZWZlcnMgdG8gdGhlIHJlYWN0LWJvaWxlcnBsYXRlIHZlcnNpb24gdGhpcyBwcm9qZWN0IGlzIGJhc2VkIG9uLlxuICB2ZXJzaW9uOiAnMy40LjAnLFxuXG4gIC8qKlxuICAgKiBUaGUgRExMIFBsdWdpbiBwcm92aWRlcyBhIGRyYW1hdGljIHNwZWVkIGluY3JlYXNlIHRvIHdlYnBhY2sgYnVpbGQgYW5kIGhvdCBtb2R1bGUgcmVsb2FkaW5nXG4gICAqIGJ5IGNhY2hpbmcgdGhlIG1vZHVsZSBtZXRhZGF0YSBmb3IgYWxsIG9mIG91ciBucG0gZGVwZW5kZW5jaWVzLiBXZSBlbmFibGUgaXQgYnkgZGVmYXVsdFxuICAgKiBpbiBkZXZlbG9wbWVudC5cbiAgICpcbiAgICpcbiAgICogVG8gZGlzYWJsZSB0aGUgRExMIFBsdWdpbiwgc2V0IHRoaXMgdmFsdWUgdG8gZmFsc2UuXG4gICAqL1xuICBkbGxQbHVnaW46IHtcbiAgICBkZWZhdWx0czoge1xuICAgICAgLyoqXG4gICAgICAgKiB3ZSBuZWVkIHRvIGV4Y2x1ZGUgZGVwZW5kZW5jaWVzIHdoaWNoIGFyZSBub3QgaW50ZW5kZWQgZm9yIHRoZSBicm93c2VyXG4gICAgICAgKiBieSBsaXN0aW5nIHRoZW0gaGVyZS5cbiAgICAgICAqL1xuICAgICAgZXhjbHVkZTogW1xuICAgICAgICAnY2hhbGsnLFxuICAgICAgICAnY29tcHJlc3Npb24nLFxuICAgICAgICAnY3Jvc3MtZW52JyxcbiAgICAgICAgJ2V4cHJlc3MnLFxuICAgICAgICAnaXAnLFxuICAgICAgICAnbWluaW1pc3QnLFxuICAgICAgICAnc2FuaXRpemUuY3NzJyxcbiAgICAgIF0sXG5cbiAgICAgIC8qKlxuICAgICAgICogU3BlY2lmeSBhbnkgYWRkaXRpb25hbCBkZXBlbmRlbmNpZXMgaGVyZS4gV2UgaW5jbHVkZSBjb3JlLWpzIGFuZCBsb2Rhc2hcbiAgICAgICAqIHNpbmNlIGEgbG90IG9mIG91ciBkZXBlbmRlbmNpZXMgZGVwZW5kIG9uIHRoZW0gYW5kIHRoZXkgZ2V0IHBpY2tlZCB1cCBieSB3ZWJwYWNrLlxuICAgICAgICovXG4gICAgICBpbmNsdWRlOiBbJ2NvcmUtanMnLCAnZXZlbnRzb3VyY2UtcG9seWZpbGwnLCAnYmFiZWwtcG9seWZpbGwnLCAnbG9kYXNoJ10sXG5cbiAgICAgIC8vIFRoZSBwYXRoIHdoZXJlIHRoZSBETEwgbWFuaWZlc3QgYW5kIGJ1bmRsZSB3aWxsIGdldCBidWlsdFxuICAgICAgcGF0aDogcmVzb2x2ZSgnLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvaWxlcnBsYXRlLWRsbHMnKSxcbiAgICB9LFxuXG4gICAgZW50cnkocGtnKSB7XG4gICAgICBjb25zdCBkZXBlbmRlbmN5TmFtZXMgPSBPYmplY3Qua2V5cyhwa2cuZGVwZW5kZW5jaWVzKTtcbiAgICAgIGNvbnN0IGV4Y2x1ZGUgPSBwa2cuZGxsUGx1Z2luLmV4Y2x1ZGUgfHwgUmVhY3RCb2lsZXJwbGF0ZS5kbGxQbHVnaW4uZGVmYXVsdHMuZXhjbHVkZTtcbiAgICAgIGNvbnN0IGluY2x1ZGUgPSBwa2cuZGxsUGx1Z2luLmluY2x1ZGUgfHwgUmVhY3RCb2lsZXJwbGF0ZS5kbGxQbHVnaW4uZGVmYXVsdHMuaW5jbHVkZTtcbiAgICAgIGNvbnN0IGluY2x1ZGVEZXBlbmRlbmNpZXMgPSB1bmlxKGRlcGVuZGVuY3lOYW1lcy5jb25jYXQoaW5jbHVkZSkpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICByZWFjdEJvaWxlcnBsYXRlRGVwczogcHVsbEFsbChpbmNsdWRlRGVwZW5kZW5jaWVzLCBleGNsdWRlKSxcbiAgICAgIH07XG4gICAgfSxcbiAgfSxcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RCb2lsZXJwbGF0ZTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "config.js"
      ],
      "names": [
        "resolve",
        "require",
        "pullAll",
        "uniq",
        "ReactBoilerplate",
        "version",
        "dllPlugin",
        "defaults",
        "exclude",
        "include",
        "path",
        "entry",
        "pkg",
        "dependencyNames",
        "Object",
        "keys",
        "dependencies",
        "includeDependencies",
        "concat",
        "reactBoilerplateDeps",
        "module",
        "exports"
      ],
      "mappings": "AAAA,IAAMA,UAAUC,QAAQ,MAAR,EAAgBD,OAAhC;AACA,IAAME,UAAUD,QAAQ,gBAAR,CAAhB;AACA,IAAME,OAAOF,QAAQ,aAAR,CAAb;;AAEA,IAAMG,mBAAmB;AACvB;AACAC,WAAS,OAFc;;AAIvB;;;;;;;;AAQAC,aAAW;AACTC,cAAU;AACR;;;;AAIAC,eAAS,CACP,OADO,EAEP,aAFO,EAGP,WAHO,EAIP,SAJO,EAKP,IALO,EAMP,UANO,EAOP,cAPO,CALD;;AAeR;;;;AAIAC,eAAS,CAAC,SAAD,EAAY,sBAAZ,EAAoC,gBAApC,EAAsD,QAAtD,CAnBD;;AAqBR;AACAC,YAAMV,QAAQ,wCAAR;AAtBE,KADD;;AA0BTW,SA1BS,iBA0BHC,GA1BG,EA0BE;AACT,UAAMC,kBAAkBC,OAAOC,IAAP,CAAYH,IAAII,YAAhB,CAAxB;AACA,UAAMR,UAAUI,IAAIN,SAAJ,CAAcE,OAAd,IAAyBJ,iBAAiBE,SAAjB,CAA2BC,QAA3B,CAAoCC,OAA7E;AACA,UAAMC,UAAUG,IAAIN,SAAJ,CAAcG,OAAd,IAAyBL,iBAAiBE,SAAjB,CAA2BC,QAA3B,CAAoCE,OAA7E;AACA,UAAMQ,sBAAsBd,KAAKU,gBAAgBK,MAAhB,CAAuBT,OAAvB,CAAL,CAA5B;;AAEA,aAAO;AACLU,8BAAsBjB,QAAQe,mBAAR,EAA6BT,OAA7B;AADjB,OAAP;AAGD;AAnCQ;AAZY,CAAzB;;AAmDAY,OAAOC,OAAP,GAAiBjB,gBAAjB",
      "file": "config.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals",
      "sourcesContent": [
        "const resolve = require('path').resolve;\nconst pullAll = require('lodash/pullAll');\nconst uniq = require('lodash/uniq');\n\nconst ReactBoilerplate = {\n  // This refers to the react-boilerplate version this project is based on.\n  version: '3.4.0',\n\n  /**\n   * The DLL Plugin provides a dramatic speed increase to webpack build and hot module reloading\n   * by caching the module metadata for all of our npm dependencies. We enable it by default\n   * in development.\n   *\n   *\n   * To disable the DLL Plugin, set this value to false.\n   */\n  dllPlugin: {\n    defaults: {\n      /**\n       * we need to exclude dependencies which are not intended for the browser\n       * by listing them here.\n       */\n      exclude: [\n        'chalk',\n        'compression',\n        'cross-env',\n        'express',\n        'ip',\n        'minimist',\n        'sanitize.css',\n      ],\n\n      /**\n       * Specify any additional dependencies here. We include core-js and lodash\n       * since a lot of our dependencies depend on them and they get picked up by webpack.\n       */\n      include: ['core-js', 'eventsource-polyfill', 'babel-polyfill', 'lodash'],\n\n      // The path where the DLL manifest and bundle will get built\n      path: resolve('../node_modules/react-boilerplate-dlls'),\n    },\n\n    entry(pkg) {\n      const dependencyNames = Object.keys(pkg.dependencies);\n      const exclude = pkg.dllPlugin.exclude || ReactBoilerplate.dllPlugin.defaults.exclude;\n      const include = pkg.dllPlugin.include || ReactBoilerplate.dllPlugin.defaults.include;\n      const includeDependencies = uniq(dependencyNames.concat(include));\n\n      return {\n        reactBoilerplateDeps: pullAll(includeDependencies, exclude),\n      };\n    },\n  },\n};\n\nmodule.exports = ReactBoilerplate;\n"
      ]
    },
    "mtime": 1514460849213
  },
  "{\"filename\":\"/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack/webpack.base.babel.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0": {
    "metadata": {
      "usedHelpers": [],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack/webpack.base.babel.js",
      "filenameRelative": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack/webpack.base.babel.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "webpack.base.babel.js",
      "sourceFileName": "webpack.base.babel.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "webpack.base.babel"
    },
    "ignored": false,
    "code": "/**\n * COMMON WEBPACK CONFIGURATION\n */\n\nvar path = require('path');\nvar webpack = require('webpack');\n\nvar isElectron = process.env.APPLICATION === 'electron';\n\nmodule.exports = function (options) {\n  return {\n    entry: options.entry,\n    output: Object.assign({ // Compile into js/build.js\n      path: path.resolve(process.cwd(), 'build'),\n      publicPath: isElectron ? '' : '/'\n    }, options.output), // Merge with env dependent settings\n    module: {\n      loaders: [{\n        test: /\\.js$/, // Transform all .js files required somewhere with Babel\n        loader: 'babel-loader',\n        exclude: /node_modules/,\n        query: options.babelQuery\n      }, {\n        // Do not transform vendor's CSS with CSS-modules\n        // The point is that they remain in global scope.\n        // Since we require these CSS files in our JS or CSS files,\n        // they will be a part of our compilation either way.\n        // So, no need for ExtractTextPlugin here.\n        test: /\\.css$/,\n        loaders: ['style-loader', 'css-loader']\n      }, {\n        test: /\\.scss$/,\n        loaders: ['style-loader', {\n          loader: 'css-loader',\n          options: {\n            modules: true\n          }\n        }, 'sass-loader']\n      }, {\n        test: /\\.(eot|svg|ttf|woff|woff2)$/,\n        loader: 'file-loader'\n      }, {\n        test: /\\.(jpg|png|gif)$/,\n        loaders: ['file-loader', {\n          loader: 'image-webpack-loader',\n          query: {\n            progressive: true,\n            optimizationLevel: 7,\n            interlaced: false,\n            pngquant: {\n              quality: '65-90',\n              speed: 4\n            }\n          }\n        }]\n      }, {\n        test: /\\.html$/,\n        loader: 'html-loader'\n      }, {\n        test: /\\.json$/,\n        loader: 'json-loader'\n      }, {\n        test: /\\.(mp4|webm)$/,\n        loader: 'url-loader',\n        query: {\n          limit: 10000\n        }\n      }, {\n        test: /\\.node$/,\n        loader: 'node-loader'\n      }]\n    },\n    plugins: options.plugins.concat([new webpack.ProvidePlugin({\n      // make fetch available\n      fetch: 'exports-loader?self.fetch!whatwg-fetch'\n    }),\n\n    // Always expose NODE_ENV to webpack, in order to use `process.env.NODE_ENV`\n    // inside your code for any environment checks; UglifyJS will automatically\n    // drop any unreachable code.\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n        APPLICATION: JSON.stringify(process.env.APPLICATION || 'web')\n      }\n    }), new webpack.NamedModulesPlugin()]),\n    resolve: {\n      modules: ['app', 'node_modules'],\n      extensions: ['.js', '.jsx', '.react.js', '.json'],\n      mainFields: ['browser', 'jsnext:main', 'main']\n    },\n    devtool: options.devtool,\n    target: isElectron ? 'electron-renderer' : 'web',\n    performance: options.performance || {}\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2suYmFzZS5iYWJlbC5qcyJdLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsIndlYnBhY2siLCJpc0VsZWN0cm9uIiwicHJvY2VzcyIsImVudiIsIkFQUExJQ0FUSU9OIiwibW9kdWxlIiwiZXhwb3J0cyIsIm9wdGlvbnMiLCJlbnRyeSIsIm91dHB1dCIsIk9iamVjdCIsImFzc2lnbiIsInJlc29sdmUiLCJjd2QiLCJwdWJsaWNQYXRoIiwibG9hZGVycyIsInRlc3QiLCJsb2FkZXIiLCJleGNsdWRlIiwicXVlcnkiLCJiYWJlbFF1ZXJ5IiwibW9kdWxlcyIsInByb2dyZXNzaXZlIiwib3B0aW1pemF0aW9uTGV2ZWwiLCJpbnRlcmxhY2VkIiwicG5ncXVhbnQiLCJxdWFsaXR5Iiwic3BlZWQiLCJsaW1pdCIsInBsdWdpbnMiLCJjb25jYXQiLCJQcm92aWRlUGx1Z2luIiwiZmV0Y2giLCJEZWZpbmVQbHVnaW4iLCJOT0RFX0VOViIsIkpTT04iLCJzdHJpbmdpZnkiLCJOYW1lZE1vZHVsZXNQbHVnaW4iLCJleHRlbnNpb25zIiwibWFpbkZpZWxkcyIsImRldnRvb2wiLCJ0YXJnZXQiLCJwZXJmb3JtYW5jZSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFJQSxJQUFNQSxPQUFPQyxRQUFRLE1BQVIsQ0FBYjtBQUNBLElBQU1DLFVBQVVELFFBQVEsU0FBUixDQUFoQjs7QUFFQSxJQUFNRSxhQUFhQyxRQUFRQyxHQUFSLENBQVlDLFdBQVosS0FBNEIsVUFBL0M7O0FBRUFDLE9BQU9DLE9BQVAsR0FBaUIsVUFBQ0MsT0FBRDtBQUFBLFNBQWM7QUFDN0JDLFdBQU9ELFFBQVFDLEtBRGM7QUFFN0JDLFlBQVFDLE9BQU9DLE1BQVAsQ0FBYyxFQUFFO0FBQ3RCYixZQUFNQSxLQUFLYyxPQUFMLENBQWFWLFFBQVFXLEdBQVIsRUFBYixFQUE0QixPQUE1QixDQURjO0FBRXBCQyxrQkFBWWIsYUFBYSxFQUFiLEdBQWtCO0FBRlYsS0FBZCxFQUdMTSxRQUFRRSxNQUhILENBRnFCLEVBS1Q7QUFDcEJKLFlBQVE7QUFDTlUsZUFBUyxDQUFDO0FBQ1JDLGNBQU0sT0FERSxFQUNPO0FBQ2ZDLGdCQUFRLGNBRkE7QUFHUkMsaUJBQVMsY0FIRDtBQUlSQyxlQUFPWixRQUFRYTtBQUpQLE9BQUQsRUFLTjtBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUosY0FBTSxRQU5MO0FBT0RELGlCQUFTLENBQUMsY0FBRCxFQUFpQixZQUFqQjtBQVBSLE9BTE0sRUFhTjtBQUNEQyxjQUFNLFNBREw7QUFFREQsaUJBQVMsQ0FBQyxjQUFELEVBQWlCO0FBQ3hCRSxrQkFBUSxZQURnQjtBQUV4QlYsbUJBQVM7QUFDUGMscUJBQVM7QUFERjtBQUZlLFNBQWpCLEVBS04sYUFMTTtBQUZSLE9BYk0sRUFxQk47QUFDREwsY0FBTSw2QkFETDtBQUVEQyxnQkFBUTtBQUZQLE9BckJNLEVBd0JOO0FBQ0RELGNBQU0sa0JBREw7QUFFREQsaUJBQVMsQ0FDUCxhQURPLEVBRVA7QUFDRUUsa0JBQVEsc0JBRFY7QUFFRUUsaUJBQU87QUFDTEcseUJBQWEsSUFEUjtBQUVMQywrQkFBbUIsQ0FGZDtBQUdMQyx3QkFBWSxLQUhQO0FBSUxDLHNCQUFVO0FBQ1JDLHVCQUFTLE9BREQ7QUFFUkMscUJBQU87QUFGQztBQUpMO0FBRlQsU0FGTztBQUZSLE9BeEJNLEVBeUNOO0FBQ0RYLGNBQU0sU0FETDtBQUVEQyxnQkFBUTtBQUZQLE9BekNNLEVBNENOO0FBQ0RELGNBQU0sU0FETDtBQUVEQyxnQkFBUTtBQUZQLE9BNUNNLEVBK0NOO0FBQ0RELGNBQU0sZUFETDtBQUVEQyxnQkFBUSxZQUZQO0FBR0RFLGVBQU87QUFDTFMsaUJBQU87QUFERjtBQUhOLE9BL0NNLEVBcUROO0FBQ0RaLGNBQU0sU0FETDtBQUVEQyxnQkFBUTtBQUZQLE9BckRNO0FBREgsS0FOcUI7QUFpRTdCWSxhQUFTdEIsUUFBUXNCLE9BQVIsQ0FBZ0JDLE1BQWhCLENBQXVCLENBQzlCLElBQUk5QixRQUFRK0IsYUFBWixDQUEwQjtBQUN4QjtBQUNBQyxhQUFPO0FBRmlCLEtBQTFCLENBRDhCOztBQU05QjtBQUNBO0FBQ0E7QUFDQSxRQUFJaEMsUUFBUWlDLFlBQVosQ0FBeUI7QUFDdkIscUJBQWU7QUFDYkMsa0JBQVVDLEtBQUtDLFNBQUwsQ0FBZWxDLFFBQVFDLEdBQVIsQ0FBWStCLFFBQTNCLENBREc7QUFFYjlCLHFCQUFhK0IsS0FBS0MsU0FBTCxDQUFlbEMsUUFBUUMsR0FBUixDQUFZQyxXQUFaLElBQTJCLEtBQTFDO0FBRkE7QUFEUSxLQUF6QixDQVQ4QixFQWU5QixJQUFJSixRQUFRcUMsa0JBQVosRUFmOEIsQ0FBdkIsQ0FqRW9CO0FBa0Y3QnpCLGFBQVM7QUFDUFMsZUFBUyxDQUFDLEtBQUQsRUFBUSxjQUFSLENBREY7QUFFUGlCLGtCQUFZLENBQ1YsS0FEVSxFQUVWLE1BRlUsRUFHVixXQUhVLEVBSVYsT0FKVSxDQUZMO0FBUVBDLGtCQUFZLENBQ1YsU0FEVSxFQUVWLGFBRlUsRUFHVixNQUhVO0FBUkwsS0FsRm9CO0FBZ0c3QkMsYUFBU2pDLFFBQVFpQyxPQWhHWTtBQWlHN0JDLFlBQVF4QyxhQUFhLG1CQUFiLEdBQW1DLEtBakdkO0FBa0c3QnlDLGlCQUFhbkMsUUFBUW1DLFdBQVIsSUFBdUI7QUFsR1AsR0FBZDtBQUFBLENBQWpCIiwiZmlsZSI6IndlYnBhY2suYmFzZS5iYWJlbC5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbGV4L3NyYy9naXRodWIuY29tL25pY2hvbGF0aWFuL2ppZ2dseW1hcC9pbnRlcm5hbHMvd2VicGFjayIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ09NTU9OIFdFQlBBQ0sgQ09ORklHVVJBVElPTlxuICovXG5cbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCB3ZWJwYWNrID0gcmVxdWlyZSgnd2VicGFjaycpO1xuXG5jb25zdCBpc0VsZWN0cm9uID0gcHJvY2Vzcy5lbnYuQVBQTElDQVRJT04gPT09ICdlbGVjdHJvbic7XG5cbm1vZHVsZS5leHBvcnRzID0gKG9wdGlvbnMpID0+ICh7XG4gIGVudHJ5OiBvcHRpb25zLmVudHJ5LFxuICBvdXRwdXQ6IE9iamVjdC5hc3NpZ24oeyAvLyBDb21waWxlIGludG8ganMvYnVpbGQuanNcbiAgICBwYXRoOiBwYXRoLnJlc29sdmUocHJvY2Vzcy5jd2QoKSwgJ2J1aWxkJyksXG4gICAgcHVibGljUGF0aDogaXNFbGVjdHJvbiA/ICcnIDogJy8nLFxuICB9LCBvcHRpb25zLm91dHB1dCksIC8vIE1lcmdlIHdpdGggZW52IGRlcGVuZGVudCBzZXR0aW5nc1xuICBtb2R1bGU6IHtcbiAgICBsb2FkZXJzOiBbe1xuICAgICAgdGVzdDogL1xcLmpzJC8sIC8vIFRyYW5zZm9ybSBhbGwgLmpzIGZpbGVzIHJlcXVpcmVkIHNvbWV3aGVyZSB3aXRoIEJhYmVsXG4gICAgICBsb2FkZXI6ICdiYWJlbC1sb2FkZXInLFxuICAgICAgZXhjbHVkZTogL25vZGVfbW9kdWxlcy8sXG4gICAgICBxdWVyeTogb3B0aW9ucy5iYWJlbFF1ZXJ5LFxuICAgIH0sIHtcbiAgICAgIC8vIERvIG5vdCB0cmFuc2Zvcm0gdmVuZG9yJ3MgQ1NTIHdpdGggQ1NTLW1vZHVsZXNcbiAgICAgIC8vIFRoZSBwb2ludCBpcyB0aGF0IHRoZXkgcmVtYWluIGluIGdsb2JhbCBzY29wZS5cbiAgICAgIC8vIFNpbmNlIHdlIHJlcXVpcmUgdGhlc2UgQ1NTIGZpbGVzIGluIG91ciBKUyBvciBDU1MgZmlsZXMsXG4gICAgICAvLyB0aGV5IHdpbGwgYmUgYSBwYXJ0IG9mIG91ciBjb21waWxhdGlvbiBlaXRoZXIgd2F5LlxuICAgICAgLy8gU28sIG5vIG5lZWQgZm9yIEV4dHJhY3RUZXh0UGx1Z2luIGhlcmUuXG4gICAgICB0ZXN0OiAvXFwuY3NzJC8sXG4gICAgICBsb2FkZXJzOiBbJ3N0eWxlLWxvYWRlcicsICdjc3MtbG9hZGVyJ10sXG4gICAgfSwge1xuICAgICAgdGVzdDogL1xcLnNjc3MkLyxcbiAgICAgIGxvYWRlcnM6IFsnc3R5bGUtbG9hZGVyJywge1xuICAgICAgICBsb2FkZXI6ICdjc3MtbG9hZGVyJyxcbiAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgIG1vZHVsZXM6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICB9LCAnc2Fzcy1sb2FkZXInXSxcbiAgICB9LCB7XG4gICAgICB0ZXN0OiAvXFwuKGVvdHxzdmd8dHRmfHdvZmZ8d29mZjIpJC8sXG4gICAgICBsb2FkZXI6ICdmaWxlLWxvYWRlcicsXG4gICAgfSwge1xuICAgICAgdGVzdDogL1xcLihqcGd8cG5nfGdpZikkLyxcbiAgICAgIGxvYWRlcnM6IFtcbiAgICAgICAgJ2ZpbGUtbG9hZGVyJyxcbiAgICAgICAge1xuICAgICAgICAgIGxvYWRlcjogJ2ltYWdlLXdlYnBhY2stbG9hZGVyJyxcbiAgICAgICAgICBxdWVyeToge1xuICAgICAgICAgICAgcHJvZ3Jlc3NpdmU6IHRydWUsXG4gICAgICAgICAgICBvcHRpbWl6YXRpb25MZXZlbDogNyxcbiAgICAgICAgICAgIGludGVybGFjZWQ6IGZhbHNlLFxuICAgICAgICAgICAgcG5ncXVhbnQ6IHtcbiAgICAgICAgICAgICAgcXVhbGl0eTogJzY1LTkwJyxcbiAgICAgICAgICAgICAgc3BlZWQ6IDQsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sIHtcbiAgICAgIHRlc3Q6IC9cXC5odG1sJC8sXG4gICAgICBsb2FkZXI6ICdodG1sLWxvYWRlcicsXG4gICAgfSwge1xuICAgICAgdGVzdDogL1xcLmpzb24kLyxcbiAgICAgIGxvYWRlcjogJ2pzb24tbG9hZGVyJyxcbiAgICB9LCB7XG4gICAgICB0ZXN0OiAvXFwuKG1wNHx3ZWJtKSQvLFxuICAgICAgbG9hZGVyOiAndXJsLWxvYWRlcicsXG4gICAgICBxdWVyeToge1xuICAgICAgICBsaW1pdDogMTAwMDAsXG4gICAgICB9LFxuICAgIH0sIHtcbiAgICAgIHRlc3Q6IC9cXC5ub2RlJC8sXG4gICAgICBsb2FkZXI6ICdub2RlLWxvYWRlcicsXG4gICAgfV0sXG4gIH0sXG4gIHBsdWdpbnM6IG9wdGlvbnMucGx1Z2lucy5jb25jYXQoW1xuICAgIG5ldyB3ZWJwYWNrLlByb3ZpZGVQbHVnaW4oe1xuICAgICAgLy8gbWFrZSBmZXRjaCBhdmFpbGFibGVcbiAgICAgIGZldGNoOiAnZXhwb3J0cy1sb2FkZXI/c2VsZi5mZXRjaCF3aGF0d2ctZmV0Y2gnLFxuICAgIH0pLFxuXG4gICAgLy8gQWx3YXlzIGV4cG9zZSBOT0RFX0VOViB0byB3ZWJwYWNrLCBpbiBvcmRlciB0byB1c2UgYHByb2Nlc3MuZW52Lk5PREVfRU5WYFxuICAgIC8vIGluc2lkZSB5b3VyIGNvZGUgZm9yIGFueSBlbnZpcm9ubWVudCBjaGVja3M7IFVnbGlmeUpTIHdpbGwgYXV0b21hdGljYWxseVxuICAgIC8vIGRyb3AgYW55IHVucmVhY2hhYmxlIGNvZGUuXG4gICAgbmV3IHdlYnBhY2suRGVmaW5lUGx1Z2luKHtcbiAgICAgICdwcm9jZXNzLmVudic6IHtcbiAgICAgICAgTk9ERV9FTlY6IEpTT04uc3RyaW5naWZ5KHByb2Nlc3MuZW52Lk5PREVfRU5WKSxcbiAgICAgICAgQVBQTElDQVRJT046IEpTT04uc3RyaW5naWZ5KHByb2Nlc3MuZW52LkFQUExJQ0FUSU9OIHx8ICd3ZWInKSxcbiAgICAgIH0sXG4gICAgfSksXG4gICAgbmV3IHdlYnBhY2suTmFtZWRNb2R1bGVzUGx1Z2luKCksXG4gIF0pLFxuICByZXNvbHZlOiB7XG4gICAgbW9kdWxlczogWydhcHAnLCAnbm9kZV9tb2R1bGVzJ10sXG4gICAgZXh0ZW5zaW9uczogW1xuICAgICAgJy5qcycsXG4gICAgICAnLmpzeCcsXG4gICAgICAnLnJlYWN0LmpzJyxcbiAgICAgICcuanNvbicsXG4gICAgXSxcbiAgICBtYWluRmllbGRzOiBbXG4gICAgICAnYnJvd3NlcicsXG4gICAgICAnanNuZXh0Om1haW4nLFxuICAgICAgJ21haW4nLFxuICAgIF0sXG4gIH0sXG4gIGRldnRvb2w6IG9wdGlvbnMuZGV2dG9vbCxcbiAgdGFyZ2V0OiBpc0VsZWN0cm9uID8gJ2VsZWN0cm9uLXJlbmRlcmVyJyA6ICd3ZWInLFxuICBwZXJmb3JtYW5jZTogb3B0aW9ucy5wZXJmb3JtYW5jZSB8fCB7fSxcbn0pO1xuIl19",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "webpack.base.babel.js"
      ],
      "names": [
        "path",
        "require",
        "webpack",
        "isElectron",
        "process",
        "env",
        "APPLICATION",
        "module",
        "exports",
        "options",
        "entry",
        "output",
        "Object",
        "assign",
        "resolve",
        "cwd",
        "publicPath",
        "loaders",
        "test",
        "loader",
        "exclude",
        "query",
        "babelQuery",
        "modules",
        "progressive",
        "optimizationLevel",
        "interlaced",
        "pngquant",
        "quality",
        "speed",
        "limit",
        "plugins",
        "concat",
        "ProvidePlugin",
        "fetch",
        "DefinePlugin",
        "NODE_ENV",
        "JSON",
        "stringify",
        "NamedModulesPlugin",
        "extensions",
        "mainFields",
        "devtool",
        "target",
        "performance"
      ],
      "mappings": "AAAA;;;;AAIA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;;AAEA,IAAME,aAAaC,QAAQC,GAAR,CAAYC,WAAZ,KAA4B,UAA/C;;AAEAC,OAAOC,OAAP,GAAiB,UAACC,OAAD;AAAA,SAAc;AAC7BC,WAAOD,QAAQC,KADc;AAE7BC,YAAQC,OAAOC,MAAP,CAAc,EAAE;AACtBb,YAAMA,KAAKc,OAAL,CAAaV,QAAQW,GAAR,EAAb,EAA4B,OAA5B,CADc;AAEpBC,kBAAYb,aAAa,EAAb,GAAkB;AAFV,KAAd,EAGLM,QAAQE,MAHH,CAFqB,EAKT;AACpBJ,YAAQ;AACNU,eAAS,CAAC;AACRC,cAAM,OADE,EACO;AACfC,gBAAQ,cAFA;AAGRC,iBAAS,cAHD;AAIRC,eAAOZ,QAAQa;AAJP,OAAD,EAKN;AACD;AACA;AACA;AACA;AACA;AACAJ,cAAM,QANL;AAODD,iBAAS,CAAC,cAAD,EAAiB,YAAjB;AAPR,OALM,EAaN;AACDC,cAAM,SADL;AAEDD,iBAAS,CAAC,cAAD,EAAiB;AACxBE,kBAAQ,YADgB;AAExBV,mBAAS;AACPc,qBAAS;AADF;AAFe,SAAjB,EAKN,aALM;AAFR,OAbM,EAqBN;AACDL,cAAM,6BADL;AAEDC,gBAAQ;AAFP,OArBM,EAwBN;AACDD,cAAM,kBADL;AAEDD,iBAAS,CACP,aADO,EAEP;AACEE,kBAAQ,sBADV;AAEEE,iBAAO;AACLG,yBAAa,IADR;AAELC,+BAAmB,CAFd;AAGLC,wBAAY,KAHP;AAILC,sBAAU;AACRC,uBAAS,OADD;AAERC,qBAAO;AAFC;AAJL;AAFT,SAFO;AAFR,OAxBM,EAyCN;AACDX,cAAM,SADL;AAEDC,gBAAQ;AAFP,OAzCM,EA4CN;AACDD,cAAM,SADL;AAEDC,gBAAQ;AAFP,OA5CM,EA+CN;AACDD,cAAM,eADL;AAEDC,gBAAQ,YAFP;AAGDE,eAAO;AACLS,iBAAO;AADF;AAHN,OA/CM,EAqDN;AACDZ,cAAM,SADL;AAEDC,gBAAQ;AAFP,OArDM;AADH,KANqB;AAiE7BY,aAAStB,QAAQsB,OAAR,CAAgBC,MAAhB,CAAuB,CAC9B,IAAI9B,QAAQ+B,aAAZ,CAA0B;AACxB;AACAC,aAAO;AAFiB,KAA1B,CAD8B;;AAM9B;AACA;AACA;AACA,QAAIhC,QAAQiC,YAAZ,CAAyB;AACvB,qBAAe;AACbC,kBAAUC,KAAKC,SAAL,CAAelC,QAAQC,GAAR,CAAY+B,QAA3B,CADG;AAEb9B,qBAAa+B,KAAKC,SAAL,CAAelC,QAAQC,GAAR,CAAYC,WAAZ,IAA2B,KAA1C;AAFA;AADQ,KAAzB,CAT8B,EAe9B,IAAIJ,QAAQqC,kBAAZ,EAf8B,CAAvB,CAjEoB;AAkF7BzB,aAAS;AACPS,eAAS,CAAC,KAAD,EAAQ,cAAR,CADF;AAEPiB,kBAAY,CACV,KADU,EAEV,MAFU,EAGV,WAHU,EAIV,OAJU,CAFL;AAQPC,kBAAY,CACV,SADU,EAEV,aAFU,EAGV,MAHU;AARL,KAlFoB;AAgG7BC,aAASjC,QAAQiC,OAhGY;AAiG7BC,YAAQxC,aAAa,mBAAb,GAAmC,KAjGd;AAkG7ByC,iBAAanC,QAAQmC,WAAR,IAAuB;AAlGP,GAAd;AAAA,CAAjB",
      "file": "webpack.base.babel.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/internals/webpack",
      "sourcesContent": [
        "/**\n * COMMON WEBPACK CONFIGURATION\n */\n\nconst path = require('path');\nconst webpack = require('webpack');\n\nconst isElectron = process.env.APPLICATION === 'electron';\n\nmodule.exports = (options) => ({\n  entry: options.entry,\n  output: Object.assign({ // Compile into js/build.js\n    path: path.resolve(process.cwd(), 'build'),\n    publicPath: isElectron ? '' : '/',\n  }, options.output), // Merge with env dependent settings\n  module: {\n    loaders: [{\n      test: /\\.js$/, // Transform all .js files required somewhere with Babel\n      loader: 'babel-loader',\n      exclude: /node_modules/,\n      query: options.babelQuery,\n    }, {\n      // Do not transform vendor's CSS with CSS-modules\n      // The point is that they remain in global scope.\n      // Since we require these CSS files in our JS or CSS files,\n      // they will be a part of our compilation either way.\n      // So, no need for ExtractTextPlugin here.\n      test: /\\.css$/,\n      loaders: ['style-loader', 'css-loader'],\n    }, {\n      test: /\\.scss$/,\n      loaders: ['style-loader', {\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      }, 'sass-loader'],\n    }, {\n      test: /\\.(eot|svg|ttf|woff|woff2)$/,\n      loader: 'file-loader',\n    }, {\n      test: /\\.(jpg|png|gif)$/,\n      loaders: [\n        'file-loader',\n        {\n          loader: 'image-webpack-loader',\n          query: {\n            progressive: true,\n            optimizationLevel: 7,\n            interlaced: false,\n            pngquant: {\n              quality: '65-90',\n              speed: 4,\n            },\n          },\n        },\n      ],\n    }, {\n      test: /\\.html$/,\n      loader: 'html-loader',\n    }, {\n      test: /\\.json$/,\n      loader: 'json-loader',\n    }, {\n      test: /\\.(mp4|webm)$/,\n      loader: 'url-loader',\n      query: {\n        limit: 10000,\n      },\n    }, {\n      test: /\\.node$/,\n      loader: 'node-loader',\n    }],\n  },\n  plugins: options.plugins.concat([\n    new webpack.ProvidePlugin({\n      // make fetch available\n      fetch: 'exports-loader?self.fetch!whatwg-fetch',\n    }),\n\n    // Always expose NODE_ENV to webpack, in order to use `process.env.NODE_ENV`\n    // inside your code for any environment checks; UglifyJS will automatically\n    // drop any unreachable code.\n    new webpack.DefinePlugin({\n      'process.env': {\n        NODE_ENV: JSON.stringify(process.env.NODE_ENV),\n        APPLICATION: JSON.stringify(process.env.APPLICATION || 'web'),\n      },\n    }),\n    new webpack.NamedModulesPlugin(),\n  ]),\n  resolve: {\n    modules: ['app', 'node_modules'],\n    extensions: [\n      '.js',\n      '.jsx',\n      '.react.js',\n      '.json',\n    ],\n    mainFields: [\n      'browser',\n      'jsnext:main',\n      'main',\n    ],\n  },\n  devtool: options.devtool,\n  target: isElectron ? 'electron-renderer' : 'web',\n  performance: options.performance || {},\n});\n"
      ]
    },
    "mtime": 1514460910031
  },
  "{\"filename\":\"/home/alex/src/github.com/nicholatian/jigglymap/app/main.js\",\"env\":{\"development\":{\"plugins\":[]}},\"retainLines\":false,\"highlightCode\":true,\"suppressDeprecationMessages\":false,\"presets\":[],\"plugins\":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{\"loose\":false,\"spec\":false}],[[],null],[[],null],[[],{\"spec\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],{\"loose\":false}],[[],null],[[],null],[[],null],[[],{\"loose\":false}],[[],null],[[],{\"loose\":false}],[[],null],[[],null],[[],{\"async\":false,\"asyncGenerators\":false}]],\"ignore\":[],\"code\":true,\"metadata\":true,\"ast\":true,\"comments\":true,\"compact\":\"auto\",\"minified\":false,\"sourceRoot\":\"/home/alex/src/github.com/nicholatian/jigglymap/app\",\"babelrc\":true,\"sourceType\":\"module\",\"moduleIds\":false,\"passPerPreset\":false,\"parserOpts\":false,\"generatorOpts\":false}:6.26.0:development": {
    "metadata": {
      "usedHelpers": [
        "asyncToGenerator"
      ],
      "marked": [],
      "modules": {
        "imports": [],
        "exports": {
          "exported": [],
          "specifiers": []
        }
      }
    },
    "options": {
      "filename": "/home/alex/src/github.com/nicholatian/jigglymap/app/main.js",
      "filenameRelative": "/home/alex/src/github.com/nicholatian/jigglymap/app/main.js",
      "env": {},
      "retainLines": false,
      "highlightCode": true,
      "suppressDeprecationMessages": false,
      "presets": [],
      "plugins": [
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false,
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "spec": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "loose": false
          }
        ],
        [
          [],
          null
        ],
        [
          [],
          null
        ],
        [
          [],
          {
            "async": false,
            "asyncGenerators": false
          }
        ]
      ],
      "ignore": [],
      "code": true,
      "metadata": true,
      "ast": false,
      "comments": true,
      "compact": "auto",
      "minified": false,
      "sourceMaps": "both",
      "sourceMapTarget": "main.js",
      "sourceFileName": "main.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/app",
      "babelrc": false,
      "sourceType": "module",
      "moduleRoot": "/home/alex/src/github.com/nicholatian/jigglymap/app",
      "moduleIds": false,
      "passPerPreset": false,
      "parserOpts": false,
      "generatorOpts": false,
      "basename": "main"
    },
    "ignored": false,
    "code": "var _this = this;\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nvar _require = require('electron'),\n    app = _require.app,\n    BrowserWindow = _require.BrowserWindow,\n    Menu = _require.Menu;\n\nvar path = require('path');\n\nvar mainWindow = null;\n\nif (process.env.NODE_ENV === 'development') {\n  require('electron-debug')(); // eslint-disable-line global-require\n  var _path = require('path'); // eslint-disable-line\n  var p = _path.join(__dirname, '..', 'app', 'node_modules'); // eslint-disable-line\n  require('module').globalPaths.push(p); // eslint-disable-line\n}\n\napp.on('window-all-closed', function () {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\nvar installExtensions = function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var installer, extensions, forceDownload;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            installer = require('electron-devtools-installer'); // eslint-disable-line global-require\n\n            extensions = [installer.REACT_DEVELOPER_TOOLS, installer.REDUX_DEVTOOLS, 'djdcbmfacaaocoomokenoalbomllhnko'];\n            forceDownload = !!process.env.UPGRADE_EXTENSIONS;\n\n            // TODO: Use async interation statement.\n            //       Waiting on https://github.com/tc39/proposal-async-iteration\n            //       Promises will fail silently, which isn't what we want in development\n\n            return _context.abrupt('return', Promise.all(extensions.map(function (extension) {\n              return installer.default(extension, forceDownload);\n            })).catch(console.log));\n\n          case 4:\n          case 'end':\n            return _context.stop();\n        }\n      }\n    }, _callee, _this);\n  }));\n\n  return function installExtensions() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\napp.on('ready', _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n  var htmlPath;\n  return regeneratorRuntime.wrap(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!(process.env.NODE_ENV === 'development')) {\n            _context2.next = 3;\n            break;\n          }\n\n          _context2.next = 3;\n          return installExtensions();\n\n        case 3:\n\n          mainWindow = new BrowserWindow({\n            show: false,\n            width: 1024,\n            height: 728\n          });\n\n          if (process.env.NODE_ENV === 'development') {\n            mainWindow.loadURL('http://' + process.env.HOST + ':' + process.env.PORT);\n          } else {\n            htmlPath = path.join(app.getAppPath(), 'build/index.html');\n\n            mainWindow.loadURL('file://' + htmlPath);\n          }\n\n          mainWindow.webContents.on('did-finish-load', function () {\n            mainWindow.show();\n            mainWindow.focus();\n          });\n\n          mainWindow.on('closed', function () {\n            mainWindow = null;\n          });\n\n          if (process.env.NODE_ENV === 'development') {\n            mainWindow.openDevTools();\n            mainWindow.webContents.on('context-menu', function (e, props) {\n              var x = props.x,\n                  y = props.y;\n\n\n              Menu.buildFromTemplate([{\n                label: 'Inspect element',\n                click: function click() {\n                  mainWindow.inspectElement(x, y);\n                }\n              }]).popup(mainWindow);\n            });\n          }\n\n        case 8:\n        case 'end':\n          return _context2.stop();\n      }\n    }\n  }, _callee2, _this);\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImFwcCIsIkJyb3dzZXJXaW5kb3ciLCJNZW51IiwicGF0aCIsIm1haW5XaW5kb3ciLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJwIiwiam9pbiIsIl9fZGlybmFtZSIsImdsb2JhbFBhdGhzIiwicHVzaCIsIm9uIiwicGxhdGZvcm0iLCJxdWl0IiwiaW5zdGFsbEV4dGVuc2lvbnMiLCJpbnN0YWxsZXIiLCJleHRlbnNpb25zIiwiUkVBQ1RfREVWRUxPUEVSX1RPT0xTIiwiUkVEVVhfREVWVE9PTFMiLCJmb3JjZURvd25sb2FkIiwiVVBHUkFERV9FWFRFTlNJT05TIiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsImV4dGVuc2lvbiIsImRlZmF1bHQiLCJjYXRjaCIsImNvbnNvbGUiLCJsb2ciLCJzaG93Iiwid2lkdGgiLCJoZWlnaHQiLCJsb2FkVVJMIiwiSE9TVCIsIlBPUlQiLCJodG1sUGF0aCIsImdldEFwcFBhdGgiLCJ3ZWJDb250ZW50cyIsImZvY3VzIiwib3BlbkRldlRvb2xzIiwiZSIsInByb3BzIiwieCIsInkiLCJidWlsZEZyb21UZW1wbGF0ZSIsImxhYmVsIiwiY2xpY2siLCJpbnNwZWN0RWxlbWVudCIsInBvcHVwIl0sIm1hcHBpbmdzIjoiOzs7O2VBQXFDQSxRQUFRLFVBQVIsQztJQUE3QkMsRyxZQUFBQSxHO0lBQUtDLGEsWUFBQUEsYTtJQUFlQyxJLFlBQUFBLEk7O0FBQzVCLElBQU1DLE9BQU9KLFFBQVEsTUFBUixDQUFiOztBQUVBLElBQUlLLGFBQWEsSUFBakI7O0FBRUEsSUFBSUMsUUFBUUMsR0FBUixDQUFZQyxRQUFaLEtBQXlCLGFBQTdCLEVBQTRDO0FBQzFDUixVQUFRLGdCQUFSLElBRDBDLENBQ2I7QUFDN0IsTUFBTUksUUFBT0osUUFBUSxNQUFSLENBQWIsQ0FGMEMsQ0FFWjtBQUM5QixNQUFNUyxJQUFJTCxNQUFLTSxJQUFMLENBQVVDLFNBQVYsRUFBcUIsSUFBckIsRUFB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VEQ7QUFVRDs7QUF2Q2E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBaEIiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIvaG9tZS9hbGV4L3NyYy9naXRodWIuY29tL25pY2hvbGF0aWFuL2ppZ2dseW1hcC9hcHAiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGFwcCwgQnJvd3NlcldpbmRvdywgTWVudSB9ID0gcmVxdWlyZSgnZWxlY3Ryb24nKTtcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5cbmxldCBtYWluV2luZG93ID0gbnVsbDtcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gIHJlcXVpcmUoJ2VsZWN0cm9uLWRlYnVnJykoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBnbG9iYWwtcmVxdWlyZVxuICBjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIGNvbnN0IHAgPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4nLCAnYXBwJywgJ25vZGVfbW9kdWxlcycpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIHJlcXVpcmUoJ21vZHVsZScpLmdsb2JhbFBhdGhzLnB1c2gocCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbn1cblxuYXBwLm9uKCd3aW5kb3ctYWxsLWNsb3NlZCcsICgpID0+IHtcbiAgaWYgKHByb2Nlc3MucGxhdGZvcm0gIT09ICdkYXJ3aW4nKSB7XG4gICAgYXBwLnF1aXQoKTtcbiAgfVxufSk7XG5cbmNvbnN0IGluc3RhbGxFeHRlbnNpb25zID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBpbnN0YWxsZXIgPSByZXF1aXJlKCdlbGVjdHJvbi1kZXZ0b29scy1pbnN0YWxsZXInKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBnbG9iYWwtcmVxdWlyZVxuXG4gIGNvbnN0IGV4dGVuc2lvbnMgPSBbXG4gICAgaW5zdGFsbGVyLlJFQUNUX0RFVkVMT1BFUl9UT09MUyxcbiAgICBpbnN0YWxsZXIuUkVEVVhfREVWVE9PTFMsXG4gICAgJ2RqZGNibWZhY2Fhb2Nvb21va2Vub2FsYm9tbGxobmtvJyxcbiAgXTtcblxuICBjb25zdCBmb3JjZURvd25sb2FkID0gISFwcm9jZXNzLmVudi5VUEdSQURFX0VYVEVOU0lPTlM7XG5cbiAgLy8gVE9ETzogVXNlIGFzeW5jIGludGVyYXRpb24gc3RhdGVtZW50LlxuICAvLyAgICAgICBXYWl0aW5nIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLWFzeW5jLWl0ZXJhdGlvblxuICAvLyAgICAgICBQcm9taXNlcyB3aWxsIGZhaWwgc2lsZW50bHksIHdoaWNoIGlzbid0IHdoYXQgd2Ugd2FudCBpbiBkZXZlbG9wbWVudFxuICByZXR1cm4gUHJvbWlzZVxuICAgICAgLmFsbChleHRlbnNpb25zLm1hcCgoZXh0ZW5zaW9uKSA9PiBpbnN0YWxsZXIuZGVmYXVsdChleHRlbnNpb24sIGZvcmNlRG93bmxvYWQpKSlcbiAgICAgIC5jYXRjaChjb25zb2xlLmxvZyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxufTtcblxuYXBwLm9uKCdyZWFkeScsIGFzeW5jICgpID0+IHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgYXdhaXQgaW5zdGFsbEV4dGVuc2lvbnMoKTtcbiAgfVxuXG4gIG1haW5XaW5kb3cgPSBuZXcgQnJvd3NlcldpbmRvdyh7XG4gICAgc2hvdzogZmFsc2UsXG4gICAgd2lkdGg6IDEwMjQsXG4gICAgaGVpZ2h0OiA3MjgsXG4gIH0pO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgIG1haW5XaW5kb3cubG9hZFVSTChgaHR0cDovLyR7cHJvY2Vzcy5lbnYuSE9TVH06JHtwcm9jZXNzLmVudi5QT1JUfWApO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGh0bWxQYXRoID0gcGF0aC5qb2luKGFwcC5nZXRBcHBQYXRoKCksICdidWlsZC9pbmRleC5odG1sJyk7XG4gICAgbWFpbldpbmRvdy5sb2FkVVJMKGBmaWxlOi8vJHtodG1sUGF0aH1gKTtcbiAgfVxuXG4gIG1haW5XaW5kb3cud2ViQ29udGVudHMub24oJ2RpZC1maW5pc2gtbG9hZCcsICgpID0+IHtcbiAgICBtYWluV2luZG93LnNob3coKTtcbiAgICBtYWluV2luZG93LmZvY3VzKCk7XG4gIH0pO1xuXG4gIG1haW5XaW5kb3cub24oJ2Nsb3NlZCcsICgpID0+IHtcbiAgICBtYWluV2luZG93ID0gbnVsbDtcbiAgfSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgbWFpbldpbmRvdy5vcGVuRGV2VG9vbHMoKTtcbiAgICBtYWluV2luZG93LndlYkNvbnRlbnRzLm9uKCdjb250ZXh0LW1lbnUnLCAoZSwgcHJvcHMpID0+IHtcbiAgICAgIGNvbnN0IHsgeCwgeSB9ID0gcHJvcHM7XG5cbiAgICAgIE1lbnUuYnVpbGRGcm9tVGVtcGxhdGUoW3tcbiAgICAgICAgbGFiZWw6ICdJbnNwZWN0IGVsZW1lbnQnLFxuICAgICAgICBjbGljaygpIHtcbiAgICAgICAgICBtYWluV2luZG93Lmluc3BlY3RFbGVtZW50KHgsIHkpO1xuICAgICAgICB9LFxuICAgICAgfV0pLnBvcHVwKG1haW5XaW5kb3cpO1xuICAgIH0pO1xuICB9XG59KTtcbiJdfQ==",
    "ast": null,
    "map": {
      "version": 3,
      "sources": [
        "main.js"
      ],
      "names": [
        "require",
        "app",
        "BrowserWindow",
        "Menu",
        "path",
        "mainWindow",
        "process",
        "env",
        "NODE_ENV",
        "p",
        "join",
        "__dirname",
        "globalPaths",
        "push",
        "on",
        "platform",
        "quit",
        "installExtensions",
        "installer",
        "extensions",
        "REACT_DEVELOPER_TOOLS",
        "REDUX_DEVTOOLS",
        "forceDownload",
        "UPGRADE_EXTENSIONS",
        "Promise",
        "all",
        "map",
        "extension",
        "default",
        "catch",
        "console",
        "log",
        "show",
        "width",
        "height",
        "loadURL",
        "HOST",
        "PORT",
        "htmlPath",
        "getAppPath",
        "webContents",
        "focus",
        "openDevTools",
        "e",
        "props",
        "x",
        "y",
        "buildFromTemplate",
        "label",
        "click",
        "inspectElement",
        "popup"
      ],
      "mappings": "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",
      "file": "main.js",
      "sourceRoot": "/home/alex/src/github.com/nicholatian/jigglymap/app",
      "sourcesContent": [
        "const { app, BrowserWindow, Menu } = require('electron');\nconst path = require('path');\n\nlet mainWindow = null;\n\nif (process.env.NODE_ENV === 'development') {\n  require('electron-debug')(); // eslint-disable-line global-require\n  const path = require('path'); // eslint-disable-line\n  const p = path.join(__dirname, '..', 'app', 'node_modules'); // eslint-disable-line\n  require('module').globalPaths.push(p); // eslint-disable-line\n}\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\nconst installExtensions = async () => {\n  const installer = require('electron-devtools-installer'); // eslint-disable-line global-require\n\n  const extensions = [\n    installer.REACT_DEVELOPER_TOOLS,\n    installer.REDUX_DEVTOOLS,\n    'djdcbmfacaaocoomokenoalbomllhnko',\n  ];\n\n  const forceDownload = !!process.env.UPGRADE_EXTENSIONS;\n\n  // TODO: Use async interation statement.\n  //       Waiting on https://github.com/tc39/proposal-async-iteration\n  //       Promises will fail silently, which isn't what we want in development\n  return Promise\n      .all(extensions.map((extension) => installer.default(extension, forceDownload)))\n      .catch(console.log); // eslint-disable-line no-console\n};\n\napp.on('ready', async () => {\n  if (process.env.NODE_ENV === 'development') {\n    await installExtensions();\n  }\n\n  mainWindow = new BrowserWindow({\n    show: false,\n    width: 1024,\n    height: 728,\n  });\n\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.loadURL(`http://${process.env.HOST}:${process.env.PORT}`);\n  } else {\n    const htmlPath = path.join(app.getAppPath(), 'build/index.html');\n    mainWindow.loadURL(`file://${htmlPath}`);\n  }\n\n  mainWindow.webContents.on('did-finish-load', () => {\n    mainWindow.show();\n    mainWindow.focus();\n  });\n\n  mainWindow.on('closed', () => {\n    mainWindow = null;\n  });\n\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.openDevTools();\n    mainWindow.webContents.on('context-menu', (e, props) => {\n      const { x, y } = props;\n\n      Menu.buildFromTemplate([{\n        label: 'Inspect element',\n        click() {\n          mainWindow.inspectElement(x, y);\n        },\n      }]).popup(mainWindow);\n    });\n  }\n});\n"
      ]
    },
    "mtime": 1514460910030
  }
}